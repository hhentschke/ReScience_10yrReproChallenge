% produces plot of principal components of CC (whole waveforms) generated
% from short segments (the ..iState files)
% - needs 

global D WP

% which session (of all atropine sessions listed in collect_wtAtropine_av)?
expInd=1;
% downsampling factor for CC functions fed in PC analysis
sampFac=2;
% number of bins in 1D histograms of PC1 and PC2
nBin=25;

figdir='d:\projects\rmouse\paper_atropine\rawFig\';
% figdir='';
printas='-dpsc2';
printas=[];

figName=mfilename;

% collect DS and AP
collect_wtAtropine_iState_av; 
rmouse_ini;

% load data, transpose, downsample, concatenate
D=[];
t=[];
for condInd=1:2
  AP=ANPAR(condInd,expInd);
  DS=DSET(condInd,expInd);  
  % get sampling interval
  if exist([WP.rootPath DS.dpath '\' DS.abfFn '.mat'],'file')
    load([WP.rootPath DS.dpath '\' DS.abfFn '.mat'],'abfi');
  elseif exist([WP.rootPath DS.dpath '\' DS.abfFn '.abf'],'file')
    abfi=abfinfo([WP.rootPath DS.dpath '\' DS.abfFn '.abf'],'verbose',0);
  else
    error([WP.rootPath DS.dpath '\' DS.abfFn ' does not exist'])
  end
  si=abfi.si;
  
  % load([WP.rootPath AP.resPath '\iState\thgae_' AP.resFn '_' AP.rawChPrincNm{:} '_exploring']);
  
  load([WP.rootPath AP.resPath '\iState\thgae_' AP.resFn '_IN 11_exploring']);
  % load([WP.rootPath AP.resPath '\iState\thgae_' AP.resFn '_Lynx1_exploring']);
  
  segCC=fliplr(segCC);
  tmp_time=flipud(tmp_time);
  if condInd>1
    tmp_time=tmp_time+t(end);
  end
  
  nSeg(condInd)=size(segCC,2);
  D=[D; segCC(1:sampFac:end,:)'];
  t=[t; tmp_time];
end

% make tag
tag=[zeros(nSeg(1),1);ones(nSeg(2),1)];

job=5;

if job==0
  nd=D(:,[61-55 61]); 
  pcs=repmat([-AP.ccLagPts:AP.ccLagPts]',1,2);
  pcs=pcs(1:sampFac:end,:);
elseif job==5
  midpoint=round(size(D,2)/2);
  r=evdeal(abs(D'),'idx',{'allpeaks'});
  nd=zeros(size(D,1),2);
  for g=1:size(D,1)
    [nada,ix]=sort(abs(r.posPeakT{g}-midpoint));
    % left - right
    if r.posPeakT{g}(ix(1))<=midpoint
      nd(g,[1 2])=D(g,r.posPeakT{g}(ix([1 2])));
      nd(g,[3 4])=r.posPeakT{g}(ix([1 2]));
    else
      nd(g,[1 2])=D(g,r.posPeakT{g}(ix([2 1])));
      nd(g,[3 4])=r.posPeakT{g}(ix([2 1]));
    end
  end
  D=nd;
  [pcs,nd,v,dd]=PCexplore('exploreMd',1,'tag',tag,'nPC',2,'normalize',1);

elseif job==1
  fD=fft(D,128,2);
  [nd,ix]=max(abs(fD(:,1:64)).^2,[],2);
  nd=nd/300;
  nd(:,2)=angle(fD(sub2ind(size(fD),(1:size(D,1))',ix)));
  pcs=repmat([-AP.ccLagPts:AP.ccLagPts]',1,2);
  pcs=pcs(1:sampFac:end,:);
elseif job==2
  r=evdeal(D','idx',{'minmaxpeak'});
  nd=discrete2cont(r.maxPeakT',si*.001*sampFac,'intv',0);
  nd=[nd r.maxPeak'];
  pcs=repmat([-AP.ccLagPts:AP.ccLagPts]',1,2);
  pcs=pcs(1:sampFac:end,:);
elseif job==3
  r=evdeal(D','idx',{'minmaxpeak'});
  thresh=-.5;
  % this is the 'sampling interval' of the running CC
  ccsi=discrete2cont(min(diff(t)),si*.001,'intv',0);
  ix=r.minPeak'<=thresh;
  time=discrete2cont(t,si*.001,'intv',0);
  % control
  etsl_ctrl=etslburstf(time(ix & tag==0),ccsi*1.5);
  % atropine
  etsl_atr=etslburstf(time(ix & tag==1),ccsi*1.5);
  
  [n_ctrl,x]=hist(etsl_ctrl(:,2),[0:floor(ccsi):1000]);
  [n_atr,x]=hist(etsl_atr(:,2),[0:floor(ccsi):1000]);
  
  bar(x,[(n_ctrl')/size(etsl_ctrl,1) (n_atr')/size(etsl_atr,1)])
  return
elseif job==4
  [pcs,nd,v,dd]=PCexplore('plotType',{'scatter','density'},'tag',tag,'nPC',2,'normalize',0);
  return
else
  [pcs,nd,v,dd]=PCexplore('exploreMd',0,'tag',tag,'nPC',2,'normalize',0);
end

% % --- bar plot of principal component contrib (same labelscale settings as for cc func
% % plots generated by thgaeCC_shortSeg.m!)
% figure(4), clf, orient portrait
% labelscale('fontSz',8,'scaleFac',.35,'lineW',.5,'markSz',8);
% 
% xax=discrete2cont([-AP.ccLagPts:AP.ccLagPts],si*.001,'intv',0)+1;
% xax=xax(1:sampFac:end);
% % 1st
% subplot(2,2,1)
% bh=bar(xax,pcs(:,1),1.0,'k');
% set(gca,'xtick',[fliplr([0:-100:xax(1)]) [100:100:xax(end)]]);
% niceyax;
% % 2nd
% subplot(2,2,3)
% bh=bar(xax,pcs(:,2),1.0,'k');
% set(gca,'xtick',[fliplr([0:-100:xax(1)]) [100:100:xax(end)]]);
% niceyax;
% subpax(gcf);
% subplot(2,2,1)
% lh=line([0 0],get(gca,'ylim'),'linestyle','--','linewidth',1,'color','k');
% subplot(2,2,3)
% lh=line([0 0],get(gca,'ylim'),'linestyle','--','linewidth',1,'color','k');
% 
%   
% if ~isempty(printas), 
%   print(printas,[figdir figName '_2']); 
% end

% --- scatter plot
figure(1), clf, orient landscape
labelscale('fontSz',8,'scaleFac',.8,'lineW',.5,'markSz',2); 
subplot(3,3,5), hold on, box on
% 2nd vs. 1st, control (subset)
nss=1000;
plotix=find(tag==0);
plotix=plotix(round(linspace(1,length(plotix),nss)));
ph=plot(nd(plotix,1),nd(plotix,2),'o');
set(ph,'color',[.6 .6 .6]);
% 2nd vs. 1st, atropine
plotix=find(tag==1);
plotix=plotix(round(linspace(1,length(plotix),nss)));
ph=plot(nd(plotix,1),nd(plotix,2),'ko');
% set(ph,'markerfacecolor','k');
nicexyax;
axis square
xl=get(gca,'xlim');
yl=get(gca,'ylim');

% --- 1d-histograms
bin1=linspace(xl(1),xl(2),nBin);
bin2=linspace(yl(1),yl(2),nBin);
labelscale('fontSz',8,'scaleFac',1,'lineW',.5,'markSz',2); 
% - 1st component (abscissa)
subplot(3,3,2), hold on
% control
n=histc(nd(tag==0,1),bin1);
h=bin1+diff(bin1(1:2))*.5;
% ** normalize for number of events
n=n/nSeg(1);
ph=plot(h,n,'-');
lw=get(ph,'linewidth');
set(ph,'color',[.6 .6 .6],'linewidth',lw*3);
% atropine
n=histc(nd(tag==1,1),bin1);
% ** normalize for number of events
n=n/nSeg(2);
ph=plot(h,n,'k-');
set(ph,'linewidth',lw*3);
niceyuax;
set(gca,'xlim',xl);
set(gca,'xtick',[]);
axis square
% - 2nd component (ordinate)
subplot(3,3,6), hold on
% control
n=histc(nd(tag==0,2),bin2);
h=bin2+diff(bin2(1:2))*.5;
% ** normalize for number of events
n=n/nSeg(1);
ph=plot(n,h,'-');
set(ph,'color',[.6 .6 .6],'linewidth',lw*3);
% atropine
n=histc(nd(tag==1,2),bin2);
% ** normalize for number of events
n=n/nSeg(2);
ph=plot(n,h,'k-');
set(ph,'linewidth',lw*3);
nicexax;
tmpxl=get(gca,'xlim');
set(gca,'xlim',[0 tmpxl(2)]);
set(gca,'ytick',[]);
axis square

% --- plot sample points in scatter plot and draw corresponding raw cc func
% radius within which points must lie 
r=0.1;
% coordinates of attractor points to draw samples from (x,y)
co_sampPt=[-1.9 0; 0 0; 2.6 0; 0 2.5; 0 -2.0]; % wt0001
co_sampPt=[1.8 0; 0 0; -2.5 0; 0 2.2; 0 -2.2]; % wt0002

nSampPt=size(co_sampPt,1);
% determine samples (do not differentiate between control and atropine)
% and compute average waveform
sampAv=[];
for g=1:nSampPt
  ix=sqrt((nd(:,1)-co_sampPt(g,1)).^2 + (nd(:,2)-co_sampPt(g,2)).^2)<=r;
  % watch out, D is transposed
  sampAv=[sampAv mean(D(ix,:),1)'];
end
% now plot attractor points
subplot(3,3,5)
ph=plot(co_sampPt(:,1),co_sampPt(:,2),'ko');
set(ph,'markersize',12,'linewidth',3);
ph=plot(co_sampPt(:,1),co_sampPt(:,2),'wo');
set(ph,'markersize',12,'linewidth',1);

% --- plot averaged drawn cc
labelscale('fontSz',8,'scaleFac',1,'lineW',1.5,'markSz',2); 
for g=1:nSampPt
  subplot(9,10,(g-1)*10+1),
  ph=plot(xax,sampAv(:,g),'k-');
  axis tight
  set(gca,'ylim',[-1 1]);
  grid on
  xl=xax([1 end]);
  lh=line(xl,[0 0],'linestyle','--','linewidth',get(ph(1),'linewidth')*.5,'color','k');
  lh=line([0 0],get(gca,'ylim'),'linestyle','--','linewidth',get(ph(1),'linewidth')*.5,'color','k');
end

% --- difference of (normalized) densities
subplot(3,3,8)
% colormap(coma('redblue'));
colormap gray;
% ctrl
h_ctrl=hist2d(nd(tag==0,[1 2]),bin1,bin2)/nSeg(1);
h_atr=hist2d(nd(tag==1,[1 2]),bin1,bin2)/nSeg(2);
h=h_ctrl-h_atr;
ph=image(bin1,bin2,flipud(rot90(h)));
set(gca,'ydir','normal');
set(ph,'cdatamapping','scaled');
axis square
colorbar

if ~isempty(printas), 
  print(printas,[figdir figName]); 
end

