function rview(r,par,si,varargin)
% ** function rview(r,par,si,varargin)
% standalone 'results viewer' for data structure r as generated by rmouse. 
% Needs DS and AP as global vars in the workspace
%
%                         >>> INPUT VARIABLES >>>
% NAME             TYPE/DEFAULT          DESCRIPTION
% r                                      results struct of rmouse.m
% par              char arr              any of 'thCC','gaCC','theCC','gaeCC','thgaeCC','rawP','rawCoh'
% si               scalar                sampling interval (us)
% beh              char arr, 'expl'      any of 'imm','expl','groo'
% mode             char arr, 'neigh'     'neigh' - nearest neighbor (line plots)
%                                        'princ' - all vs. principal channel (line plots)
%                                        'cross' - color-coded matrix plot
% xl               scalar, []            x limit (!unit: data pts!)
%                     

% improve:
% - y axis limits
% - plot of std optional
% - plot only subset

global DS AP 

beh='expl';
mode='princ';
xl=[];
pvpmod(varargin);
rmouse_APcheck;
rawCh=rmouse_chan;

nChannels=nLFPCh;
rix=strmatch(beh,{r(:).segmentType});
% set axes to reasonable values
switch par
  case {'thCC','gaCC','theCC','gaeCC','thgaeCC'}
    xax=discrete2cont([-AP.ccLagPts:AP.ccLagPts],si*.001,'intv',0)+1;
    if ~isempty(xl)
      cix=find(abs(xax)<=xl);
      xax=xax(cix);
    else
      cix=1:length(xax);
    end
  case {'rawP','rawCoh'}
    xax=r(1).F;
    if strcmpi(par,'rawP'),
      cix=find(xax>2 & xax<100);
      xax=xax(cix);      
    else
      cix=find(xax<100);
      xax=xax(cix);      
    end
end

% ** oct 11 04: probably this, toghether with indiscriminate indexing below, is faulty,
% because the intra-site CC are differently organized than the inter-site CC
eval(['c=r(rix).' par 'Mn;']);      
eval(['cs=r(rix).' par(1:end-2) 'Std;']);      
  
ftag='rv';
fh=findobj('tag',ftag);
if isempty(fh), fh=figure;
else  figure(fh);
end
tmpScrSz=get(0,'Screensize')*.9+.1*rand;
tmpScrSz([1 2])=tmpScrSz([1 2])+tmpScrSz([3 4])*.05;
set(figha,'position',tmpScrSz,'tag',ftag,'name',ftag,...
  'color',[0.27 0.27 .4],'numbertitle','off');
clf;
orient landscape;
labelscale('scaleFac',1.0,'fontSz',7,'lineW',.5,'markSz',5); 

for cmpi=1:nChannels
  for refi=cmpi:nChannels
    subPidx=(cmpi-1)*nChannels+refi;
    ci1=AP.LFPccInd(cmpi);
    ci2=AP.LFPccInd(refi);    
    subplot(nChannels,nChannels,subPidx),
    plot(xax,abs(c{ci1,ci2}(cix)),'b');
%     hold on
%     ph=plot(xax,abs(c{ci1,ci2}(cix)+cs{ci1,ci2}(cix)));
%    set(ph,'color',[.4 .4 .4]);
    if strcmpi(par,'rawP'), set(gca,'xscale','log','yscale','log'); end
    % subpax below will loosen axes up again
    axis tight;

  end
end
subpax(fh)
